{"id":"node_modules/pixi.js/lib/rendering/renderers/shared/shader/types.mjs","dependencies":[{"name":"/home/flamcom27/Projects/flappy_bird_clone/node_modules/pixi.js/lib/rendering/renderers/shared/shader/types.mjs.map","includedInParent":true,"mtime":1755802195692},{"name":"/home/flamcom27/Projects/flappy_bird_clone/package.json","includedInParent":true,"mtime":1757622785544},{"name":"/home/flamcom27/Projects/flappy_bird_clone/node_modules/pixi.js/package.json","includedInParent":true,"mtime":1755802195498}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UNIFORM_TYPES_VALUES = exports.UNIFORM_TYPES_MAP = void 0;\nconst UNIFORM_TYPES_VALUES = exports.UNIFORM_TYPES_VALUES = [\"f32\", \"i32\", \"vec2<f32>\", \"vec3<f32>\", \"vec4<f32>\", \"mat2x2<f32>\", \"mat3x3<f32>\", \"mat4x4<f32>\", \"mat3x2<f32>\", \"mat4x2<f32>\", \"mat2x3<f32>\", \"mat4x3<f32>\", \"mat2x4<f32>\", \"mat3x4<f32>\", \"vec2<i32>\", \"vec3<i32>\", \"vec4<i32>\"];\nconst UNIFORM_TYPES_MAP = exports.UNIFORM_TYPES_MAP = UNIFORM_TYPES_VALUES.reduce((acc, type) => {\n  acc[type] = true;\n  return acc;\n}, {});"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":3,"column":7},"generated":{"line":7,"column":0}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":3,"column":13},"generated":{"line":7,"column":6}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":3,"column":36},"generated":{"line":7,"column":26}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":3,"column":36},"generated":{"line":7,"column":29}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":3,"column":36},"generated":{"line":7,"column":36}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":3,"column":36},"generated":{"line":7,"column":37}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":3,"column":36},"generated":{"line":7,"column":57}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":3,"column":36},"generated":{"line":7,"column":60}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":7,"column":61}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":7,"column":66}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":5,"column":4},"generated":{"line":7,"column":68}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":5,"column":4},"generated":{"line":7,"column":73}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":7,"column":75}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":7,"column":86}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":7,"column":88}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":7,"column":99}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":7,"column":101}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":8,"column":4},"generated":{"line":7,"column":112}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":7,"column":114}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":7,"column":127}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":7,"column":129}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":7,"column":142}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":7,"column":144}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":7,"column":157}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":7,"column":159}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":7,"column":172}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":7,"column":174}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":7,"column":187}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":7,"column":189}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":7,"column":202}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":7,"column":204}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":7,"column":217}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":16,"column":4},"generated":{"line":7,"column":219}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":16,"column":4},"generated":{"line":7,"column":232}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":17,"column":4},"generated":{"line":7,"column":234}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":17,"column":4},"generated":{"line":7,"column":247}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":7,"column":249}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":7,"column":260}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":7,"column":262}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":7,"column":273}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":7,"column":275}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":7,"column":286}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":7,"column":287}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":27,"column":7},"generated":{"line":8,"column":0}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":27,"column":13},"generated":{"line":8,"column":6}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":27,"column":33},"generated":{"line":8,"column":23}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":27,"column":33},"generated":{"line":8,"column":26}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":27,"column":33},"generated":{"line":8,"column":33}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":27,"column":33},"generated":{"line":8,"column":34}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":27,"column":33},"generated":{"line":8,"column":51}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":27,"column":33},"generated":{"line":8,"column":54}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":27,"column":33},"generated":{"line":8,"column":74}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":27,"column":54},"generated":{"line":8,"column":75}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":27,"column":61},"generated":{"line":8,"column":81}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":27,"column":61},"generated":{"line":8,"column":82}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":27,"column":62},"generated":{"line":8,"column":83}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":27,"column":62},"generated":{"line":8,"column":86}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":27,"column":67},"generated":{"line":8,"column":88}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":8,"column":92}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":8,"column":97}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":9,"column":2}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":9,"column":5}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":29,"column":8},"generated":{"line":9,"column":6}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":29,"column":12},"generated":{"line":9,"column":10}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":29,"column":16},"generated":{"line":9,"column":11}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":29,"column":16},"generated":{"line":9,"column":14}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":29,"column":16},"generated":{"line":9,"column":18}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":31,"column":11},"generated":{"line":10,"column":2}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":31,"column":11},"generated":{"line":10,"column":9}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":31,"column":11},"generated":{"line":10,"column":12}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":11,"column":1}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":32,"column":3},"generated":{"line":11,"column":3}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":32,"column":3},"generated":{"line":11,"column":4}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":32,"column":39},"generated":{"line":11,"column":5}},{"source":"../../../../../src/rendering/renderers/shared/shader/types.ts","name":null,"original":{"line":32,"column":39},"generated":{"line":11,"column":6}}],"sources":{"../../../../../src/rendering/renderers/shared/shader/types.ts":"// TODO add more types as required\n/** @internal */\nexport const UNIFORM_TYPES_VALUES = [\n    'f32',\n    'i32',\n    'vec2<f32>',\n    'vec3<f32>',\n    'vec4<f32>',\n    'mat2x2<f32>',\n    'mat3x3<f32>',\n    'mat4x4<f32>',\n    'mat3x2<f32>',\n    'mat4x2<f32>',\n    'mat2x3<f32>',\n    'mat4x3<f32>',\n    'mat2x4<f32>',\n    'mat3x4<f32>',\n    'vec2<i32>',\n    'vec3<i32>',\n    'vec4<i32>',\n] as const;\n\n/**\n * useful for checking if a type is supported - a map of supported types with a true value.\n * @internal\n */\nexport const UNIFORM_TYPES_MAP = UNIFORM_TYPES_VALUES.reduce((acc, type) =>\n{\n    acc[type] = true;\n\n    return acc;\n}, {} as Record<UNIFORM_TYPES, boolean>);\n\n/** @internal */\nexport type UNIFORM_TYPES_SINGLE = typeof UNIFORM_TYPES_VALUES[number];\n\ntype OPTIONAL_SPACE = ' ' | '';\n\n/** @internal */\nexport type UNIFORM_TYPES_ARRAY = `array<${UNIFORM_TYPES_SINGLE},${OPTIONAL_SPACE}${number}>`;\n\n/** @internal */\nexport type UNIFORM_TYPES = UNIFORM_TYPES_SINGLE | UNIFORM_TYPES_ARRAY;\n\n/**\n * This is the type of the uniform structures that are used in the UniformGroup.\n * @category rendering\n * @advanced\n */\nexport interface UniformData\n{\n    /** the value of the uniform, this could be any object - a parser will figure out how to write it to the buffer */\n    value: unknown;\n    type: UNIFORM_TYPES;\n    /** the size of the variable (eg 2 for vec2, 3 for vec3, 4 for vec4) */\n    size?: number;\n    name?: string;\n}\n\n/** @internal */\nexport interface UboElement\n{\n    data: UniformData;\n    offset: number;\n    size: number;\n}\n\n/** @internal */\nexport interface UboLayout\n{\n    uboElements: UboElement[];\n    /** float32 size // TODO change to bytes */\n    size: number;\n}\n\n/** @internal */\nexport type UniformsSyncCallback = (...args: any[]) => void;\n"},"lineCount":null}},"error":null,"hash":"cd32e7ece4f507012ccb378bd3094cba","cacheData":{"env":{}}}