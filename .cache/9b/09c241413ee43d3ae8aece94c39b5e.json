{"id":"node_modules/pixi.js/lib/scene/container/utils/multiplyColors.mjs","dependencies":[{"name":"/home/flamcom27/Projects/flappy_bird_clone/node_modules/pixi.js/lib/scene/container/utils/multiplyColors.mjs.map","includedInParent":true,"mtime":1755802195632},{"name":"/home/flamcom27/Projects/flappy_bird_clone/package.json","includedInParent":true,"mtime":1757622785544},{"name":"/home/flamcom27/Projects/flappy_bird_clone/node_modules/pixi.js/package.json","includedInParent":true,"mtime":1755802195498},{"name":"./multiplyHexColors.mjs","loc":{"line":1,"column":34,"index":34},"parent":"/home/flamcom27/Projects/flappy_bird_clone/node_modules/pixi.js/lib/scene/container/utils/multiplyColors.mjs","resolved":"/home/flamcom27/Projects/flappy_bird_clone/node_modules/pixi.js/lib/scene/container/utils/multiplyHexColors.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.multiplyColors = multiplyColors;\nvar _multiplyHexColors = require(\"./multiplyHexColors.mjs\");\n\"use strict\";\nconst WHITE_BGR = 16777215;\nfunction multiplyColors(localBGRColor, parentBGRColor) {\n  if (localBGRColor === WHITE_BGR) {\n    return parentBGRColor;\n  }\n  if (parentBGRColor === WHITE_BGR) {\n    return localBGRColor;\n  }\n  return (0, _multiplyHexColors.multiplyHexColors)(localBGRColor, parentBGRColor);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":3,"column":6},"generated":{"line":9,"column":6}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":3,"column":18},"generated":{"line":9,"column":15}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":3,"column":18},"generated":{"line":9,"column":18}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":3,"column":18},"generated":{"line":9,"column":26}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":10,"column":16},"generated":{"line":10,"column":0}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":10,"column":16},"generated":{"line":10,"column":9}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":10,"column":16},"generated":{"line":10,"column":23}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":10,"column":31},"generated":{"line":10,"column":24}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":10,"column":31},"generated":{"line":10,"column":37}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":10,"column":54},"generated":{"line":10,"column":39}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":10,"column":53}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":10,"column":55}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":11,"column":2}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":12,"column":8},"generated":{"line":11,"column":6}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":12,"column":8},"generated":{"line":11,"column":19}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":12,"column":26},"generated":{"line":11,"column":24}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":11,"column":33}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":11,"column":35}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":14,"column":15},"generated":{"line":12,"column":4}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":14,"column":15},"generated":{"line":12,"column":11}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":14,"column":15},"generated":{"line":12,"column":25}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":14,"column":15},"generated":{"line":13,"column":2}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":17,"column":4},"generated":{"line":14,"column":2}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":17,"column":8},"generated":{"line":14,"column":6}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":17,"column":8},"generated":{"line":14,"column":20}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":17,"column":27},"generated":{"line":14,"column":25}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":14,"column":34}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":14,"column":36}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":19,"column":15},"generated":{"line":15,"column":4}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":19,"column":15},"generated":{"line":15,"column":11}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":19,"column":15},"generated":{"line":15,"column":24}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":19,"column":15},"generated":{"line":16,"column":2}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":22,"column":11},"generated":{"line":17,"column":2}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":22,"column":11},"generated":{"line":17,"column":9}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":22,"column":11},"generated":{"line":17,"column":13}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":22,"column":11},"generated":{"line":17,"column":49}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":22,"column":29},"generated":{"line":17,"column":51}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":22,"column":29},"generated":{"line":17,"column":64}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":22,"column":44},"generated":{"line":17,"column":66}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":22,"column":58},"generated":{"line":17,"column":80}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":22,"column":58},"generated":{"line":17,"column":81}},{"source":"../../../../src/scene/container/utils/multiplyColors.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":18,"column":0}}],"sources":{"../../../../src/scene/container/utils/multiplyColors.ts":"import { multiplyHexColors } from './multiplyHexColors';\n\nconst WHITE_BGR = 0xFFFFFF;\n\n/**\n * @param localBGRColor\n * @param parentBGRColor\n * @internal\n */\nexport function multiplyColors(localBGRColor: number, parentBGRColor: number)\n{\n    if (localBGRColor === WHITE_BGR)\n    {\n        return parentBGRColor;\n    }\n\n    if (parentBGRColor === WHITE_BGR)\n    {\n        return localBGRColor;\n    }\n\n    return multiplyHexColors(localBGRColor, parentBGRColor);\n}\n"},"lineCount":null}},"error":null,"hash":"fc37506a3884ed8fe065016b3b107793","cacheData":{"env":{}}}