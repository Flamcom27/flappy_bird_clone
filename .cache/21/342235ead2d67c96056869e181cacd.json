{"id":"node_modules/pixi.js/lib/scene/mesh-simple/MeshSimple.mjs","dependencies":[{"name":"/home/flamcom27/Projects/flappy_bird_clone/node_modules/pixi.js/lib/scene/mesh-simple/MeshSimple.mjs.map","includedInParent":true,"mtime":1755802195632},{"name":"/home/flamcom27/Projects/flappy_bird_clone/package.json","includedInParent":true,"mtime":1757622785544},{"name":"/home/flamcom27/Projects/flappy_bird_clone/node_modules/pixi.js/package.json","includedInParent":true,"mtime":1755802195498},{"name":"../container/utils/definedProps.mjs","loc":{"line":1,"column":29,"index":29},"parent":"/home/flamcom27/Projects/flappy_bird_clone/node_modules/pixi.js/lib/scene/mesh-simple/MeshSimple.mjs","resolved":"/home/flamcom27/Projects/flappy_bird_clone/node_modules/pixi.js/lib/scene/container/utils/definedProps.mjs"},{"name":"../mesh/shared/Mesh.mjs","loc":{"line":2,"column":21,"index":89},"parent":"/home/flamcom27/Projects/flappy_bird_clone/node_modules/pixi.js/lib/scene/mesh-simple/MeshSimple.mjs","resolved":"/home/flamcom27/Projects/flappy_bird_clone/node_modules/pixi.js/lib/scene/mesh/shared/Mesh.mjs"},{"name":"../mesh/shared/MeshGeometry.mjs","loc":{"line":3,"column":29,"index":145},"parent":"/home/flamcom27/Projects/flappy_bird_clone/node_modules/pixi.js/lib/scene/mesh-simple/MeshSimple.mjs","resolved":"/home/flamcom27/Projects/flappy_bird_clone/node_modules/pixi.js/lib/scene/mesh/shared/MeshGeometry.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MeshSimple = void 0;\nvar _definedProps = require(\"../container/utils/definedProps.mjs\");\nvar _Mesh = require(\"../mesh/shared/Mesh.mjs\");\nvar _MeshGeometry = require(\"../mesh/shared/MeshGeometry.mjs\");\n\"use strict\";\nclass MeshSimple extends _Mesh.Mesh {\n  /**\n   * @param options - Options to be used for construction\n   */\n  constructor(options) {\n    const {\n      texture,\n      vertices,\n      uvs,\n      indices,\n      topology,\n      ...rest\n    } = options;\n    const geometry = new _MeshGeometry.MeshGeometry((0, _definedProps.definedProps)({\n      positions: vertices,\n      uvs,\n      indices,\n      topology\n    }));\n    super((0, _definedProps.definedProps)({\n      ...rest,\n      texture,\n      geometry\n    }));\n    this.autoUpdate = true;\n    this.onRender = this._render;\n  }\n  /**\n   * The vertex positions of the mesh as a TypedArray. Each vertex is represented by two\n   * consecutive values (x, y) in the array. Changes to these values will update the mesh's shape.\n   * @example\n   * ```ts\n   * // Read vertex positions\n   * const vertices = mesh.vertices;\n   * console.log('First vertex:', vertices[0], vertices[1]);\n   *\n   * // Modify vertices directly\n   * vertices[0] += 10;  // Move first vertex right\n   * vertices[1] -= 20;  // Move first vertex up\n   *\n   * // Animate vertices\n   * app.ticker.add(() => {\n   *     const time = performance.now() / 1000;\n   *     const vertices = mesh.vertices;\n   *\n   *     // Wave motion\n   *     for (let i = 0; i < vertices.length; i += 2) {\n   *         vertices[i + 1] = Math.sin(time + i * 0.5) * 20;\n   *     }\n   * });\n   * ```\n   * @see {@link MeshSimple#autoUpdate} For controlling vertex buffer updates\n   * @see {@link MeshGeometry#getBuffer} For direct buffer access\n   */\n  get vertices() {\n    return this.geometry.getBuffer(\"aPosition\").data;\n  }\n  set vertices(value) {\n    this.geometry.getBuffer(\"aPosition\").data = value;\n  }\n  _render() {\n    if (this.autoUpdate) {\n      this.geometry.getBuffer(\"aPosition\").update();\n    }\n  }\n}\nexports.MeshSimple = MeshSimple;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":136,"column":7},"generated":{"line":11,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":136,"column":13},"generated":{"line":11,"column":6}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":136,"column":13},"generated":{"line":11,"column":16}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":136,"column":32},"generated":{"line":11,"column":25}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":137,"column":0},"generated":{"line":11,"column":35}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":137,"column":0},"generated":{"line":11,"column":36}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":137,"column":0},"generated":{"line":12,"column":2}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":137,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":137,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":173,"column":4},"generated":{"line":15,"column":2}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":173,"column":4},"generated":{"line":15,"column":13}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":173,"column":16},"generated":{"line":15,"column":14}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":174,"column":4},"generated":{"line":15,"column":21}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":174,"column":4},"generated":{"line":15,"column":23}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":175,"column":14},"generated":{"line":16,"column":4}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":175,"column":14},"generated":{"line":16,"column":10}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":175,"column":16},"generated":{"line":17,"column":6}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":175,"column":16},"generated":{"line":17,"column":13}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":175,"column":25},"generated":{"line":18,"column":6}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":175,"column":35},"generated":{"line":18,"column":14}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":175,"column":35},"generated":{"line":19,"column":6}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":175,"column":35},"generated":{"line":19,"column":9}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":175,"column":40},"generated":{"line":20,"column":6}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":175,"column":40},"generated":{"line":20,"column":13}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":175,"column":49},"generated":{"line":21,"column":6}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":175,"column":59},"generated":{"line":21,"column":14}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":175,"column":59},"generated":{"line":22,"column":6}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":175,"column":62},"generated":{"line":22,"column":9}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":175,"column":62},"generated":{"line":23,"column":4}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":175,"column":71},"generated":{"line":23,"column":5}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":175,"column":71},"generated":{"line":23,"column":8}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":175,"column":71},"generated":{"line":23,"column":15}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":176,"column":14},"generated":{"line":24,"column":4}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":176,"column":14},"generated":{"line":24,"column":10}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":176,"column":14},"generated":{"line":24,"column":18}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":176,"column":25},"generated":{"line":24,"column":21}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":176,"column":29},"generated":{"line":24,"column":25}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":176,"column":29},"generated":{"line":24,"column":51}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":176,"column":42},"generated":{"line":24,"column":52}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":176,"column":42},"generated":{"line":24,"column":56}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":176,"column":55},"generated":{"line":24,"column":82}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":176,"column":55},"generated":{"line":24,"column":84}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":177,"column":12},"generated":{"line":25,"column":6}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":177,"column":23},"generated":{"line":25,"column":15}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":177,"column":23},"generated":{"line":25,"column":17}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":177,"column":23},"generated":{"line":25,"column":25}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":178,"column":12},"generated":{"line":26,"column":6}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":178,"column":12},"generated":{"line":26,"column":9}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":179,"column":12},"generated":{"line":27,"column":6}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":179,"column":12},"generated":{"line":27,"column":13}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":180,"column":12},"generated":{"line":28,"column":6}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":180,"column":12},"generated":{"line":29,"column":4}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":181,"column":9},"generated":{"line":29,"column":5}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":181,"column":10},"generated":{"line":29,"column":6}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":181,"column":10},"generated":{"line":29,"column":7}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":185,"column":8},"generated":{"line":30,"column":4}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":185,"column":8},"generated":{"line":30,"column":9}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":185,"column":14},"generated":{"line":30,"column":10}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":185,"column":14},"generated":{"line":30,"column":14}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":185,"column":27},"generated":{"line":30,"column":40}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":185,"column":27},"generated":{"line":30,"column":42}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":186,"column":12},"generated":{"line":31,"column":6}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":186,"column":15},"generated":{"line":31,"column":9}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":186,"column":15},"generated":{"line":31,"column":13}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":187,"column":12},"generated":{"line":32,"column":6}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":187,"column":12},"generated":{"line":32,"column":13}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":188,"column":12},"generated":{"line":33,"column":6}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":188,"column":12},"generated":{"line":34,"column":4}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":189,"column":9},"generated":{"line":34,"column":5}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":189,"column":10},"generated":{"line":34,"column":6}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":189,"column":10},"generated":{"line":34,"column":7}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":191,"column":8},"generated":{"line":35,"column":4}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":191,"column":8},"generated":{"line":35,"column":8}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":191,"column":13},"generated":{"line":35,"column":9}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":191,"column":26},"generated":{"line":35,"column":19}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":191,"column":26},"generated":{"line":35,"column":22}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":191,"column":26},"generated":{"line":35,"column":26}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":192,"column":8},"generated":{"line":36,"column":4}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":192,"column":8},"generated":{"line":36,"column":8}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":192,"column":13},"generated":{"line":36,"column":9}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":192,"column":13},"generated":{"line":36,"column":17}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":192,"column":24},"generated":{"line":36,"column":20}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":192,"column":29},"generated":{"line":36,"column":24}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":192,"column":29},"generated":{"line":36,"column":25}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":192,"column":29},"generated":{"line":36,"column":32}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":192,"column":29},"generated":{"line":37,"column":2}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":38,"column":2}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":39,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":40,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":41,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":42,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":43,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":44,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":45,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":46,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":47,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":48,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":49,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":50,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":51,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":52,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":53,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":54,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":55,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":56,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":57,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":58,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":59,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":60,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":61,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":62,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":63,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":64,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":222,"column":4},"generated":{"line":65,"column":2}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":222,"column":8},"generated":{"line":65,"column":6}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":223,"column":4},"generated":{"line":65,"column":14}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":223,"column":4},"generated":{"line":65,"column":15}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":223,"column":4},"generated":{"line":65,"column":17}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":224,"column":8},"generated":{"line":66,"column":4}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":224,"column":15},"generated":{"line":66,"column":11}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":224,"column":20},"generated":{"line":66,"column":15}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":224,"column":20},"generated":{"line":66,"column":16}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":224,"column":20},"generated":{"line":66,"column":24}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":224,"column":29},"generated":{"line":66,"column":25}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":224,"column":39},"generated":{"line":66,"column":34}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":224,"column":39},"generated":{"line":66,"column":35}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":224,"column":50},"generated":{"line":66,"column":46}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":224,"column":52},"generated":{"line":66,"column":47}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":224,"column":52},"generated":{"line":66,"column":48}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":224,"column":52},"generated":{"line":66,"column":52}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":224,"column":52},"generated":{"line":67,"column":2}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":226,"column":4},"generated":{"line":68,"column":2}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":226,"column":8},"generated":{"line":68,"column":6}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":226,"column":8},"generated":{"line":68,"column":14}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":226,"column":17},"generated":{"line":68,"column":15}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":227,"column":4},"generated":{"line":68,"column":20}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":227,"column":4},"generated":{"line":68,"column":22}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":228,"column":8},"generated":{"line":69,"column":4}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":228,"column":8},"generated":{"line":69,"column":8}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":228,"column":13},"generated":{"line":69,"column":9}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":228,"column":22},"generated":{"line":69,"column":17}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":228,"column":22},"generated":{"line":69,"column":18}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":228,"column":22},"generated":{"line":69,"column":27}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":228,"column":32},"generated":{"line":69,"column":28}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":228,"column":43},"generated":{"line":69,"column":39}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":228,"column":43},"generated":{"line":69,"column":40}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":228,"column":45},"generated":{"line":69,"column":41}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":228,"column":52},"generated":{"line":69,"column":45}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":228,"column":52},"generated":{"line":69,"column":48}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":228,"column":52},"generated":{"line":69,"column":53}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":228,"column":52},"generated":{"line":70,"column":2}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":231,"column":12},"generated":{"line":71,"column":2}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":232,"column":4},"generated":{"line":71,"column":9}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":232,"column":4},"generated":{"line":71,"column":10}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":232,"column":4},"generated":{"line":71,"column":12}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":233,"column":8},"generated":{"line":72,"column":4}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":233,"column":12},"generated":{"line":72,"column":8}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":233,"column":12},"generated":{"line":72,"column":12}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":233,"column":17},"generated":{"line":72,"column":13}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":234,"column":8},"generated":{"line":72,"column":23}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":234,"column":8},"generated":{"line":72,"column":25}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":235,"column":12},"generated":{"line":73,"column":6}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":235,"column":12},"generated":{"line":73,"column":10}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":235,"column":17},"generated":{"line":73,"column":11}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":235,"column":26},"generated":{"line":73,"column":19}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":235,"column":26},"generated":{"line":73,"column":20}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":235,"column":26},"generated":{"line":73,"column":29}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":235,"column":36},"generated":{"line":73,"column":30}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":235,"column":47},"generated":{"line":73,"column":41}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":235,"column":47},"generated":{"line":73,"column":42}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":235,"column":49},"generated":{"line":73,"column":43}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":235,"column":56},"generated":{"line":73,"column":49}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":235,"column":56},"generated":{"line":73,"column":50}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":235,"column":56},"generated":{"line":73,"column":51}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":235,"column":56},"generated":{"line":74,"column":4}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":236,"column":8},"generated":{"line":75,"column":2}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":238,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":238,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":238,"column":0},"generated":{"line":77,"column":7}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":238,"column":0},"generated":{"line":77,"column":8}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":238,"column":0},"generated":{"line":77,"column":18}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":238,"column":0},"generated":{"line":77,"column":21}},{"source":"../../../src/scene/mesh-simple/MeshSimple.ts","name":null,"original":{"line":238,"column":0},"generated":{"line":77,"column":31}}],"sources":{"../../../src/scene/mesh-simple/MeshSimple.ts":"import { definedProps } from '../container/utils/definedProps';\nimport { Mesh } from '../mesh/shared/Mesh';\nimport { MeshGeometry } from '../mesh/shared/MeshGeometry';\n\nimport type { TypedArray } from '../../rendering/renderers/shared/buffer/Buffer';\nimport type { Topology } from '../../rendering/renderers/shared/geometry/const';\nimport type { Texture } from '../../rendering/renderers/shared/texture/Texture';\nimport type { MeshOptions } from '../mesh/shared/Mesh';\n\n/**\n * Options for creating a SimpleMesh instance. Defines the texture, geometry data, and rendering topology\n * for a basic mesh with direct vertex manipulation capabilities.\n * @example\n * ```ts\n * // Create a basic textured triangle\n * const mesh = new MeshSimple({\n *     texture: Texture.from('sprite.png'),\n *     vertices: new Float32Array([\n *         0, 0,      // Vertex 1\n *         100, 0,    // Vertex 2\n *         50, 100    // Vertex 3\n *     ]),\n *     uvs: new Float32Array([\n *         0, 0,    // UV 1\n *         1, 0,    // UV 2\n *         0.5, 1   // UV 3\n *     ])\n * });\n *\n * // Create an indexed quad with custom topology\n * const quadMesh = new MeshSimple({\n *     texture: Texture.from('square.png'),\n *     vertices: new Float32Array([\n *         0, 0,     // Top-left\n *         100, 0,   // Top-right\n *         100, 100, // Bottom-right\n *         0, 100    // Bottom-left\n *     ]),\n *     uvs: new Float32Array([\n *         0, 0,  // Top-left\n *         1, 0,  // Top-right\n *         1, 1,  // Bottom-right\n *         0, 1   // Bottom-left\n *     ]),\n *     indices: new Uint32Array([\n *         0, 1, 2,  // Triangle 1\n *         0, 2, 3   // Triangle 2\n *     ]),\n *     topology: 'triangle-list'\n * });\n * ```\n * @category scene\n * @advanced\n * @noInheritDoc\n */\nexport interface SimpleMeshOptions extends Omit<MeshOptions, 'geometry'>\n{\n    /** The texture to use */\n    texture: Texture,\n    /** Array of vertex positions as x,y pairs. Each vertex is 2 floats - x, y */\n    vertices?: Float32Array,\n    /** Array of UV coordinates for texture mapping. Each UV is 2 floats - u, v */\n    uvs?: Float32Array,\n    /** Array of indices defining triangles. Each triangle is 3 indices into the vertices array. */\n    indices?: Uint32Array,\n    /**\n     * How vertices are connected to form triangles.\n     * - 'triangle-list': Individual triangles (default)\n     * - 'triangle-strip': Connected triangle strip\n     * - 'line-list': Lines between vertices\n     * - 'line-strip': Connected line strip\n     * - 'point-list': Points rendered individually\n     * @default 'triangle-list'\n     */\n    topology?: Topology;\n}\n\n/**\n * A simplified mesh class that provides an easy way to create and manipulate textured meshes\n * with direct vertex control. Perfect for creating custom shapes, deformable sprites, and\n * simple 2D effects.\n * @example\n * ```ts\n * // Create a basic triangle mesh\n * const triangleMesh = new MeshSimple({\n *     texture: Texture.from('sprite.png'),\n *     vertices: new Float32Array([\n *         0, 0,      // Top-left\n *         100, 0,    // Top-right\n *         50, 100    // Bottom-center\n *     ]),\n *     uvs: new Float32Array([\n *         0, 0,    // Map top-left of texture\n *         1, 0,    // Map top-right of texture\n *         0.5, 1   // Map bottom-center of texture\n *     ])\n * });\n *\n * // Animate vertices\n * app.ticker.add(() => {\n *     const time = performance.now() / 1000;\n *     const vertices = triangleMesh.vertices;\n *\n *     // Move the top vertex up and down\n *     vertices[1] = Math.sin(time) * 20;\n *     triangleMesh.vertices = vertices; // Update vertices\n *\n *     // Auto-updates by default\n * });\n *\n * // Create a line strip\n * const lineMesh = new MeshSimple({\n *     texture: Texture.from('line.png'),\n *     vertices: new Float32Array([\n *         0, 0,\n *         50, 50,\n *         100, 0,\n *         150, 50\n *     ]),\n *     topology: 'line-strip'\n * });\n *\n * // Manual vertex updates\n * lineMesh.autoUpdate = false;\n * const vertices = lineMesh.vertices;\n * vertices[0] += 10;\n * lineMesh.vertices = vertices; // Update vertices manually\n * // Update the vertices buffer manually\n * lineMesh.geometry.getBuffer('aPosition').update();\n * ```\n * @category scene\n * @advanced\n * @see {@link Mesh} For more advanced mesh customization\n * @see {@link MeshGeometry} For direct geometry manipulation\n */\nexport class MeshSimple extends Mesh\n{\n    /**\n     * Controls whether the mesh's vertex buffer is automatically updated each frame.\n     * When true, vertex changes will be reflected immediately. When false, manual updates are required.\n     * @example\n     * ```ts\n     * // Auto-update mode (default)\n     * mesh.autoUpdate = true;\n     * app.ticker.add(() => {\n     *     // Vertices update automatically each frame\n     *     const vertices = mesh.vertices;\n     *     vertices[1] = Math.sin(performance.now() / 1000) * 20;\n     *     mesh.vertices = vertices;\n     * });\n     *\n     * // Manual update mode\n     * mesh.autoUpdate = false;\n     * app.ticker.add(() => {\n     *     // Update vertices\n     *     const vertices = mesh.vertices;\n     *     vertices[1] = Math.sin(performance.now() / 1000) * 20;\n     *     mesh.vertices = vertices;\n     *\n     *     // Manually trigger buffer update\n     *     mesh.geometry.getBuffer('aPosition').update();\n     * });\n     * ```\n     * @default true\n     * @see {@link MeshGeometry#getBuffer} For manual buffer updates\n     * @see {@link MeshSimple#vertices} For accessing vertex data\n     */\n    public autoUpdate: boolean;\n\n    /**\n     * @param options - Options to be used for construction\n     */\n    constructor(options: SimpleMeshOptions)\n    {\n        const { texture, vertices, uvs, indices, topology, ...rest } = options;\n        const geometry = new MeshGeometry(definedProps({\n            positions: vertices,\n            uvs,\n            indices,\n            topology\n        }));\n\n        // geometry.getBuffer('aPosition').static = false;\n\n        super(definedProps({\n            ...rest,\n            texture,\n            geometry,\n        }));\n\n        this.autoUpdate = true;\n        this.onRender = this._render;\n    }\n\n    /**\n     * The vertex positions of the mesh as a TypedArray. Each vertex is represented by two\n     * consecutive values (x, y) in the array. Changes to these values will update the mesh's shape.\n     * @example\n     * ```ts\n     * // Read vertex positions\n     * const vertices = mesh.vertices;\n     * console.log('First vertex:', vertices[0], vertices[1]);\n     *\n     * // Modify vertices directly\n     * vertices[0] += 10;  // Move first vertex right\n     * vertices[1] -= 20;  // Move first vertex up\n     *\n     * // Animate vertices\n     * app.ticker.add(() => {\n     *     const time = performance.now() / 1000;\n     *     const vertices = mesh.vertices;\n     *\n     *     // Wave motion\n     *     for (let i = 0; i < vertices.length; i += 2) {\n     *         vertices[i + 1] = Math.sin(time + i * 0.5) * 20;\n     *     }\n     * });\n     * ```\n     * @see {@link MeshSimple#autoUpdate} For controlling vertex buffer updates\n     * @see {@link MeshGeometry#getBuffer} For direct buffer access\n     */\n    get vertices(): TypedArray\n    {\n        return this.geometry.getBuffer('aPosition').data;\n    }\n    set vertices(value: TypedArray)\n    {\n        this.geometry.getBuffer('aPosition').data = value;\n    }\n\n    private _render(): void\n    {\n        if (this.autoUpdate)\n        {\n            this.geometry.getBuffer('aPosition').update();\n        }\n    }\n}\n"},"lineCount":null}},"error":null,"hash":"05428c2fab2843cb93ca789c2f25eff2","cacheData":{"env":{}}}